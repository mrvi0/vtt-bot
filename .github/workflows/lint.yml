name: Lint Code Base

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Выберите нужные версии или оставьте одну
        python-version: ["3.10", "3.11"]
        # node-version: [16.x, 18.x] # Раскомментируйте для Node.js

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # --- Python Linting (выберите или адаптируйте) ---
    - name: Set up Python ${{ matrix.python-version }}
      if: matrix.python-version # Условие, чтобы шаг выполнялся только для Python матрицы
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # - name: Install Python dependencies (using Poetry)
    #   if: matrix.python-version && hashFiles('**/pyproject.toml')
    #   run: |
    #     pip install poetry
    #     poetry install --no-interaction --no-root

    - name: Install Python dependencies (using requirements.txt)
      if: matrix.python-version && hashFiles('**/requirements.txt') && !hashFiles('**/pyproject.toml')
      run: |
        pip install -r requirements.txt

    # - name: Lint with Ruff (Recommended: fast linter/formatter)
    #   if: matrix.python-version
    #   run: |
    #     pip install ruff # Или установите через poetry/requirements
    #     ruff check .
    #     ruff format --check . # Проверяет форматирование без изменения файлов

    # - name: Lint with Flake8 & Black (Alternative)
    #   if: matrix.python-version
    #   run: |
    #     pip install flake8 black # Или установите через poetry/requirements
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics # Базовые проверки flake8
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics # Проверка сложности и длины строки
    #     black --check . # Проверка форматирования black

    # --- Node.js Linting (раскомментируйте и адаптируйте) ---
    # - name: Set up Node.js ${{ matrix.node-version }}
    #   if: matrix.node-version # Условие, чтобы шаг выполнялся только для Node матрицы
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm' # Или 'yarn'

    # - name: Install Node.js dependencies
    #   if: matrix.node-version
    #   run: npm ci # Или yarn install --frozen-lockfile

    # - name: Lint with ESLint & Prettier
    #   if: matrix.node-version
    #   run: |
    #     npm run lint # Замените на вашу команду линтинга из package.json (например, eslint .)
    #     npm run format:check # Замените на вашу команду проверки форматирования (например, prettier --check .)